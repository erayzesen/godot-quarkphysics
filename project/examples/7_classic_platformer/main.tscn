[gd_scene load_steps=18 format=4 uid="uid://dw06ipgwyx2cc"]

[ext_resource type="Script" path="res://examples/7_classic_platformer/player.gd" id="1_b5iax"]
[ext_resource type="Texture2D" uid="uid://d3j7v6kge2who" path="res://examples/sprites/tileset.png" id="1_ibcbn"]
[ext_resource type="Script" path="res://examples/7_classic_platformer/moveable_platform.gd" id="2_hvcqu"]
[ext_resource type="Script" path="res://examples/7_classic_platformer/door_button.gd" id="2_ndt36"]
[ext_resource type="Script" path="res://addons/quarkphysics/helper_nodes/qtilemap_collider.gd" id="2_yuswt"]
[ext_resource type="Script" path="res://examples/7_classic_platformer/coin.gd" id="3_5al4l"]
[ext_resource type="Script" path="res://examples/7_classic_platformer/q_world_node.gd" id="4_5rs6g"]
[ext_resource type="Script" path="res://examples/7_classic_platformer/finish_area.gd" id="4_mmqkf"]
[ext_resource type="Texture2D" uid="uid://cm01ugnxqwp12" path="res://examples/icon.svg" id="6_sv6we"]
[ext_resource type="Script" path="res://examples/7_classic_platformer/flag.gd" id="8_b3t3c"]

[sub_resource type="LabelSettings" id="LabelSettings_2ckbs"]
font_size = 36
font_color = Color(0, 0, 0, 0.254902)

[sub_resource type="Curve" id="Curve_p1je6"]
_data = [Vector2(0, 1), 0.0, 0.0, 0, 0, Vector2(0.993407, 0.00701892), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_hu1ci"]
curve = SubResource("Curve_p1je6")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_wjf8p"]
particle_flag_disable_z = true
direction = Vector3(0, -1, 0)
initial_velocity_max = 322.0
angular_velocity_min = -193.56
angular_velocity_max = 442.85
gravity = Vector3(0, 70, 0)
scale_min = 10.0
scale_max = 10.0
scale_curve = SubResource("CurveTexture_hu1ci")
color = Color(0.745314, 0, 0.269557, 1)
hue_variation_min = -1.0
hue_variation_max = 1.0

[sub_resource type="PhysicsMaterial" id="PhysicsMaterial_pburd"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_qdrbb"]
texture = ExtResource("1_ibcbn")
texture_region_size = Vector2i(64, 64)
0:0/0 = 0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(32, 0, 32, 32, -32, 32)
1:0/0 = 0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, 0, 32, -32, 32, 32, -32, 32)
2:0/0 = 0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)
3:0/0 = 0
3:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, 32, -32, -32, 32, 0, 32, 32)
4:0/0 = 0
4:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, 0, 32, 32, -32, 32)
0:1/0 = 0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 0)
1:1/0 = 0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 0)
2:1/0 = 0
3:1/0 = 0
3:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 0, -32, 32)
4:1/0 = 0
4:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, -32, 0)
0:2/0 = 0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(32, -32, 32, 32, -32, 32)
1:2/0 = 0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, 32, -32, 32)
2:2/0 = 0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -32, 16, -32, 32, 0, 16, 32, -16, 32, -32, 0)
3:2/0 = 0
3:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, 32, 32)
4:2/0 = 0
4:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-32, -32, 32, -32, -32, 32)

[sub_resource type="TileSet" id="TileSet_2ktbh"]
tile_size = Vector2i(64, 64)
physics_layer_0/collision_layer = 2
physics_layer_0/physics_material = SubResource("PhysicsMaterial_pburd")
sources/1 = SubResource("TileSetAtlasSource_qdrbb")

[node name="Node2D" type="Node2D"]
metadata/_edit_horizontal_guides_ = [352.0]

[node name="background" type="ColorRect" parent="."]
offset_left = -80.0
offset_right = 1008.0
offset_bottom = 739.0
mouse_filter = 2

[node name="Label" type="Label" parent="."]
offset_left = 336.0
offset_top = 264.0
offset_right = 736.0
offset_bottom = 471.0
text = "key a: move left 
key d: move right
key w: jump
"
label_settings = SubResource("LabelSettings_2ckbs")

[node name="QWorldNode" type="QWorldNode" parent="."]
debug_renderer = false
enable_debug_mouse_interactions = true
script = ExtResource("4_5rs6g")

[node name="DoorButton" type="QRigidBodyNode" parent="." node_paths=PackedStringArray("door")]
fixed_rotation = true
mass = 0.1
layers = 0
position = Vector2(200, 512)
script = ExtResource("2_ndt36")
door = NodePath("../Door")

[node name="QMeshCircleNode" type="QMeshCircleNode" parent="DoorButton"]
circle_radius = 16.0
enable_vector_rendering = true
fill_color = Color(1, 0.14902, 0.454902, 1)
enable_stroke = true
data_particle_positions = PackedVector2Array(0, 0)
data_particle_radius = PackedFloat32Array(16)
data_particle_is_internal = PackedByteArray("AA==")

[node name="QPlatformerBodyNode" type="QPlatformerBodyNode" parent="."]
specific_platform_layers = 2
jump_duration_frame_count = 20
position = Vector2(64, 496)
script = ExtResource("1_b5iax")

[node name="QMeshRectNode" type="QMeshRectNode" parent="QPlatformerBodyNode"]
enable_vector_rendering = true
fill_color = Color(0.984045, 0.374761, 0.322941, 1)
enable_stroke = true
data_particle_positions = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
data_particle_radius = PackedFloat32Array(0.5, 0.5, 0.5, 0.5)
data_particle_is_internal = PackedByteArray("AAAAAA==")
data_particle_is_enabled = PackedByteArray("AQEBAQ==")
data_particle_is_lazy = PackedByteArray("AAAAAA==")
data_springs = Array[PackedInt32Array]([PackedInt32Array(0, 1), PackedInt32Array(1, 2), PackedInt32Array(2, 3), PackedInt32Array(3, 0)])
data_internal_springs = Array[PackedInt32Array]([PackedInt32Array(0, 2), PackedInt32Array(1, 3)])
data_polygon = PackedInt32Array(0, 1, 2, 3)
data_uv_maps = Array[PackedInt32Array]([PackedInt32Array(0, 1, 3), PackedInt32Array(1, 2, 3)])

[node name="Box" type="QRigidBodyNode" parent="."]
layers = 3
position = Vector2(128, 288)

[node name="QMeshRectNode" type="QMeshRectNode" parent="Box"]
rectangle_size = Vector2(60, 60)
enable_vector_rendering = true
fill_color = Color(1, 0.517647, 0.14902, 1)
enable_stroke = true
data_particle_positions = PackedVector2Array(-30, -30, 30, -30, 30, 30, -30, 30)
data_particle_radius = PackedFloat32Array(0.5, 0.5, 0.5, 0.5)
data_particle_is_internal = PackedByteArray("AAAAAA==")
data_particle_is_enabled = PackedByteArray("AQEBAQ==")
data_particle_is_lazy = PackedByteArray("AAAAAA==")
data_springs = Array[PackedInt32Array]([PackedInt32Array(0, 1), PackedInt32Array(1, 2), PackedInt32Array(2, 3), PackedInt32Array(3, 0)])
data_internal_springs = Array[PackedInt32Array]([PackedInt32Array(0, 2), PackedInt32Array(1, 3)])
data_polygon = PackedInt32Array(0, 1, 2, 3)
data_uv_maps = Array[PackedInt32Array]([PackedInt32Array(0, 1, 3), PackedInt32Array(1, 2, 3)])

[node name="FinishFlagStick" type="QSoftBodyNode" parent="."]
rigidity = 0.5
shape_matching = true
shape_matching_rate = 1.0
use_custom_gravity = true
custom_gravity = Vector2(0, -0.2)
position = Vector2(104, 93)

[node name="QMeshAdvancedNode" type="QMeshAdvancedNode" parent="FinishFlagStick"]
disable_polygon_for_collisions = true
enable_vector_rendering = true
enable_stroke = true
enable_curved_corners = true
curve_length = 4.0
data_particle_positions = PackedVector2Array(0, 40, 0, 24, 0, 8, 0, -24.125, 8, -24, 8, 8, 8, 40, 8, 24, 8, 32, 0, 32, 3.5, -23)
data_particle_radius = PackedFloat32Array(0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 6)
data_particle_is_internal = PackedByteArray("AAAAAAAAAAAAAAA=")
data_particle_is_enabled = PackedByteArray("AAEBAQEBAAEAAAE=")
data_particle_is_lazy = PackedByteArray("AAEBAQEBAAEAAAE=")
data_springs = Array[PackedInt32Array]([PackedInt32Array(3, 4), PackedInt32Array(5, 2), PackedInt32Array(2, 3), PackedInt32Array(5, 7), PackedInt32Array(7, 8), PackedInt32Array(8, 6), PackedInt32Array(6, 0), PackedInt32Array(0, 9), PackedInt32Array(9, 1), PackedInt32Array(1, 2), PackedInt32Array(7, 1), PackedInt32Array(8, 9), PackedInt32Array(4, 5), PackedInt32Array(2, 10), PackedInt32Array(5, 10), PackedInt32Array(4, 10), PackedInt32Array(3, 10), PackedInt32Array(1, 5), PackedInt32Array(9, 7), PackedInt32Array(0, 8)])
data_polygon = PackedInt32Array(0, 9, 1, 2, 3, 4, 5, 7, 8, 6)

[node name="Flag" type="QSoftBodyNode" parent="FinishFlagStick"]
rigidity = 0.1
shape_matching = true
can_sleep = false
use_custom_gravity = true
custom_gravity = Vector2(0, 0.05)
mass = 0.0
layers = 0
collidable_layers = 0
show_behind_parent = true
position = Vector2(16, -8)
script = ExtResource("8_b3t3c")

[node name="QMeshAdvancedNode" type="QMeshAdvancedNode" parent="FinishFlagStick/Flag"]
disable_polygon_for_collisions = true
show_polygons = false
enable_vector_rendering = true
triangulation = true
fill_color = Color(0.0625162, 0.823636, 0.458717, 1)
fill_texture_offset = Vector2(-4, 0.1)
enable_stroke = true
enable_curved_corners = true
curve_length = 2.0
data_particle_positions = PackedVector2Array(-8, -16.125, 28.125, 3.125, -8, 16, 0.625, -11.75, 9.375, -7, 18.25, -2, 17.5, 7.375, 8.5, 11, 0, 13.75)
data_particle_radius = PackedFloat32Array(0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
data_particle_is_internal = PackedByteArray("AAAAAAAAAAAA")
data_particle_is_enabled = PackedByteArray("AQEBAQEBAQEB")
data_particle_is_lazy = PackedByteArray("AAAAAAAAAAAA")
data_springs = Array[PackedInt32Array]([PackedInt32Array(2, 0), PackedInt32Array(0, 3), PackedInt32Array(3, 4), PackedInt32Array(4, 5), PackedInt32Array(5, 1), PackedInt32Array(1, 6), PackedInt32Array(6, 7), PackedInt32Array(7, 8), PackedInt32Array(8, 2)])
data_polygon = PackedInt32Array(2, 0, 3, 4, 5, 1, 6, 7, 8)
data_uv_maps = Array[PackedInt32Array]([PackedInt32Array(2, 0, 3), PackedInt32Array(3, 8, 2), PackedInt32Array(3, 4, 8), PackedInt32Array(8, 4, 7), PackedInt32Array(7, 4, 5), PackedInt32Array(7, 5, 6), PackedInt32Array(6, 5, 1)])

[node name="FinishArea" type="QAreaBodyNode" parent="."]
position = Vector2(111, 93)
script = ExtResource("4_mmqkf")

[node name="GPUParticles2D" type="GPUParticles2D" parent="FinishArea"]
z_index = 1000
position = Vector2(-3, 34)
emitting = false
amount = 30
process_material = SubResource("ParticleProcessMaterial_wjf8p")
lifetime = 10.0
one_shot = true
speed_scale = 2.0
explosiveness = 1.0
visibility_rect = Rect2(-500, -500, 1000, 1000)

[node name="QMeshRectNode" type="QMeshRectNode" parent="FinishArea"]
rectangle_size = Vector2(32, 72)
data_particle_positions = PackedVector2Array(-16, -36, 16, -36, 16, 36, -16, 36)
data_particle_radius = PackedFloat32Array(0.5, 0.5, 0.5, 0.5)
data_particle_is_internal = PackedByteArray("AAAAAA==")
data_particle_is_enabled = PackedByteArray("AQEBAQ==")
data_particle_is_lazy = PackedByteArray("AAAAAA==")
data_springs = Array[PackedInt32Array]([PackedInt32Array(0, 1), PackedInt32Array(1, 2), PackedInt32Array(2, 3), PackedInt32Array(3, 0)])
data_internal_springs = Array[PackedInt32Array]([PackedInt32Array(0, 2), PackedInt32Array(1, 3)])
data_polygon = PackedInt32Array(0, 1, 2, 3)
data_uv_maps = Array[PackedInt32Array]([PackedInt32Array(0, 1, 3), PackedInt32Array(1, 2, 3)])

[node name="QSoftBodyNode" type="QSoftBodyNode" parent="."]
passivation_of_internal_springs = true
area_preserving = true
position = Vector2(686, 448)

[node name="QMeshPolygonNode" type="QMeshPolygonNode" parent="QSoftBodyNode"]
side_count = 16
polar_grid = 3
enable_vector_rendering = true
fill_texture = ExtResource("6_sv6we")
enable_stroke = true
data_particle_positions = PackedVector2Array(32, 0, 29.5641, 12.2459, 22.6274, 22.6274, 12.2459, 29.5641, -1.39876e-06, 32, -12.2459, 29.5641, -22.6274, 22.6274, -29.5641, 12.2459, -32, -2.79753e-06, -29.5641, -12.2459, -22.6274, -22.6274, -12.2459, -29.5641, 3.81596e-07, -32, 12.2459, -29.5641, 22.6274, -22.6274, 29.5641, -12.2459, 21.3333, 0, 19.7094, 8.16391, 15.0849, 15.0849, 8.16391, 19.7094, -9.3251e-07, 21.3333, -8.16392, 19.7094, -15.0849, 15.0849, -19.7094, 8.16391, -21.3333, -1.86502e-06, -19.7094, -8.16391, -15.0849, -15.0849, -8.16391, -19.7094, 2.54397e-07, -21.3333, 8.16392, -19.7094, 15.0849, -15.0849, 19.7094, -8.16391, 10.6667, 0, 9.85472, 4.08196, 7.54247, 7.54247, 4.08196, 9.85472, -4.66255e-07, 10.6667, -4.08196, 9.85472, -7.54247, 7.54247, -9.85472, 4.08195, -10.6667, -9.3251e-07, -9.85472, -4.08196, -7.54247, -7.54247, -4.08195, -9.85472, 1.27199e-07, -10.6667, 4.08196, -9.85471, 7.54247, -7.54247, 9.85472, -4.08196, 0, 0)
data_particle_radius = PackedFloat32Array(0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5)
data_particle_is_internal = PackedByteArray("AAAAAAAAAAAAAAAAAAAAAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ==")
data_particle_is_enabled = PackedByteArray("AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ==")
data_particle_is_lazy = PackedByteArray("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==")
data_springs = Array[PackedInt32Array]([PackedInt32Array(0, 1), PackedInt32Array(1, 2), PackedInt32Array(2, 3), PackedInt32Array(3, 4), PackedInt32Array(4, 5), PackedInt32Array(5, 6), PackedInt32Array(6, 7), PackedInt32Array(7, 8), PackedInt32Array(8, 9), PackedInt32Array(9, 10), PackedInt32Array(10, 11), PackedInt32Array(11, 12), PackedInt32Array(12, 13), PackedInt32Array(13, 14), PackedInt32Array(14, 15), PackedInt32Array(15, 0)])
data_internal_springs = Array[PackedInt32Array]([PackedInt32Array(16, 17), PackedInt32Array(17, 18), PackedInt32Array(18, 19), PackedInt32Array(19, 20), PackedInt32Array(20, 21), PackedInt32Array(21, 22), PackedInt32Array(22, 23), PackedInt32Array(23, 24), PackedInt32Array(24, 25), PackedInt32Array(25, 26), PackedInt32Array(26, 27), PackedInt32Array(27, 28), PackedInt32Array(28, 29), PackedInt32Array(29, 30), PackedInt32Array(30, 31), PackedInt32Array(31, 16), PackedInt32Array(16, 0), PackedInt32Array(16, 1), PackedInt32Array(17, 0), PackedInt32Array(17, 1), PackedInt32Array(17, 1), PackedInt32Array(17, 2), PackedInt32Array(18, 1), PackedInt32Array(18, 2), PackedInt32Array(18, 2), PackedInt32Array(18, 3), PackedInt32Array(19, 2), PackedInt32Array(19, 3), PackedInt32Array(19, 3), PackedInt32Array(19, 4), PackedInt32Array(20, 3), PackedInt32Array(20, 4), PackedInt32Array(20, 4), PackedInt32Array(20, 5), PackedInt32Array(21, 4), PackedInt32Array(21, 5), PackedInt32Array(21, 5), PackedInt32Array(21, 6), PackedInt32Array(22, 5), PackedInt32Array(22, 6), PackedInt32Array(22, 6), PackedInt32Array(22, 7), PackedInt32Array(23, 6), PackedInt32Array(23, 7), PackedInt32Array(23, 7), PackedInt32Array(23, 8), PackedInt32Array(24, 7), PackedInt32Array(24, 8), PackedInt32Array(24, 8), PackedInt32Array(24, 9), PackedInt32Array(25, 8), PackedInt32Array(25, 9), PackedInt32Array(25, 9), PackedInt32Array(25, 10), PackedInt32Array(26, 9), PackedInt32Array(26, 10), PackedInt32Array(26, 10), PackedInt32Array(26, 11), PackedInt32Array(27, 10), PackedInt32Array(27, 11), PackedInt32Array(27, 11), PackedInt32Array(27, 12), PackedInt32Array(28, 11), PackedInt32Array(28, 12), PackedInt32Array(28, 12), PackedInt32Array(28, 13), PackedInt32Array(29, 12), PackedInt32Array(29, 13), PackedInt32Array(29, 13), PackedInt32Array(29, 14), PackedInt32Array(30, 13), PackedInt32Array(30, 14), PackedInt32Array(30, 14), PackedInt32Array(30, 15), PackedInt32Array(31, 14), PackedInt32Array(31, 15), PackedInt32Array(31, 15), PackedInt32Array(31, 0), PackedInt32Array(16, 15), PackedInt32Array(16, 0), PackedInt32Array(32, 33), PackedInt32Array(33, 34), PackedInt32Array(34, 35), PackedInt32Array(35, 36), PackedInt32Array(36, 37), PackedInt32Array(37, 38), PackedInt32Array(38, 39), PackedInt32Array(39, 40), PackedInt32Array(40, 41), PackedInt32Array(41, 42), PackedInt32Array(42, 43), PackedInt32Array(43, 44), PackedInt32Array(44, 45), PackedInt32Array(45, 46), PackedInt32Array(46, 47), PackedInt32Array(47, 32), PackedInt32Array(32, 16), PackedInt32Array(32, 17), PackedInt32Array(33, 16), PackedInt32Array(33, 17), PackedInt32Array(33, 17), PackedInt32Array(33, 18), PackedInt32Array(34, 17), PackedInt32Array(34, 18), PackedInt32Array(34, 18), PackedInt32Array(34, 19), PackedInt32Array(35, 18), PackedInt32Array(35, 19), PackedInt32Array(35, 19), PackedInt32Array(35, 20), PackedInt32Array(36, 19), PackedInt32Array(36, 20), PackedInt32Array(36, 20), PackedInt32Array(36, 21), PackedInt32Array(37, 20), PackedInt32Array(37, 21), PackedInt32Array(37, 21), PackedInt32Array(37, 22), PackedInt32Array(38, 21), PackedInt32Array(38, 22), PackedInt32Array(38, 22), PackedInt32Array(38, 23), PackedInt32Array(39, 22), PackedInt32Array(39, 23), PackedInt32Array(39, 23), PackedInt32Array(39, 24), PackedInt32Array(40, 23), PackedInt32Array(40, 24), PackedInt32Array(40, 24), PackedInt32Array(40, 25), PackedInt32Array(41, 24), PackedInt32Array(41, 25), PackedInt32Array(41, 25), PackedInt32Array(41, 26), PackedInt32Array(42, 25), PackedInt32Array(42, 26), PackedInt32Array(42, 26), PackedInt32Array(42, 27), PackedInt32Array(43, 26), PackedInt32Array(43, 27), PackedInt32Array(43, 27), PackedInt32Array(43, 28), PackedInt32Array(44, 27), PackedInt32Array(44, 28), PackedInt32Array(44, 28), PackedInt32Array(44, 29), PackedInt32Array(45, 28), PackedInt32Array(45, 29), PackedInt32Array(45, 29), PackedInt32Array(45, 30), PackedInt32Array(46, 29), PackedInt32Array(46, 30), PackedInt32Array(46, 30), PackedInt32Array(46, 31), PackedInt32Array(47, 30), PackedInt32Array(47, 31), PackedInt32Array(47, 31), PackedInt32Array(47, 16), PackedInt32Array(32, 31), PackedInt32Array(32, 16), PackedInt32Array(48, 32), PackedInt32Array(48, 33), PackedInt32Array(48, 34), PackedInt32Array(48, 35), PackedInt32Array(48, 36), PackedInt32Array(48, 37), PackedInt32Array(48, 38), PackedInt32Array(48, 39), PackedInt32Array(48, 40), PackedInt32Array(48, 41), PackedInt32Array(48, 42), PackedInt32Array(48, 43), PackedInt32Array(48, 44), PackedInt32Array(48, 45), PackedInt32Array(48, 46), PackedInt32Array(48, 47), PackedInt32Array(46, 32), PackedInt32Array(32, 34), PackedInt32Array(47, 33), PackedInt32Array(33, 35), PackedInt32Array(32, 34), PackedInt32Array(34, 36), PackedInt32Array(33, 35), PackedInt32Array(35, 37), PackedInt32Array(34, 36), PackedInt32Array(36, 38), PackedInt32Array(35, 37), PackedInt32Array(37, 39), PackedInt32Array(36, 38), PackedInt32Array(38, 40), PackedInt32Array(37, 39), PackedInt32Array(39, 41), PackedInt32Array(38, 40), PackedInt32Array(40, 42), PackedInt32Array(39, 41), PackedInt32Array(41, 43), PackedInt32Array(40, 42), PackedInt32Array(42, 44), PackedInt32Array(41, 43), PackedInt32Array(43, 45), PackedInt32Array(42, 44), PackedInt32Array(44, 46), PackedInt32Array(43, 45), PackedInt32Array(45, 47), PackedInt32Array(44, 46), PackedInt32Array(46, 32), PackedInt32Array(45, 47), PackedInt32Array(47, 33)])
data_polygon = PackedInt32Array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)
data_uv_maps = Array[PackedInt32Array]([PackedInt32Array(0, 1, 16), PackedInt32Array(1, 17, 16), PackedInt32Array(1, 2, 17), PackedInt32Array(2, 18, 17), PackedInt32Array(2, 3, 18), PackedInt32Array(3, 19, 18), PackedInt32Array(3, 4, 19), PackedInt32Array(4, 20, 19), PackedInt32Array(4, 5, 20), PackedInt32Array(5, 21, 20), PackedInt32Array(5, 6, 21), PackedInt32Array(6, 22, 21), PackedInt32Array(6, 7, 22), PackedInt32Array(7, 23, 22), PackedInt32Array(7, 8, 23), PackedInt32Array(8, 24, 23), PackedInt32Array(8, 9, 24), PackedInt32Array(9, 25, 24), PackedInt32Array(9, 10, 25), PackedInt32Array(10, 26, 25), PackedInt32Array(10, 11, 26), PackedInt32Array(11, 27, 26), PackedInt32Array(11, 12, 27), PackedInt32Array(12, 28, 27), PackedInt32Array(12, 13, 28), PackedInt32Array(13, 29, 28), PackedInt32Array(13, 14, 29), PackedInt32Array(14, 30, 29), PackedInt32Array(14, 15, 30), PackedInt32Array(15, 31, 30), PackedInt32Array(15, 0, 31), PackedInt32Array(0, 16, 31), PackedInt32Array(16, 17, 32), PackedInt32Array(17, 33, 32), PackedInt32Array(17, 18, 33), PackedInt32Array(18, 34, 33), PackedInt32Array(18, 19, 34), PackedInt32Array(19, 35, 34), PackedInt32Array(19, 20, 35), PackedInt32Array(20, 36, 35), PackedInt32Array(20, 21, 36), PackedInt32Array(21, 37, 36), PackedInt32Array(21, 22, 37), PackedInt32Array(22, 38, 37), PackedInt32Array(22, 23, 38), PackedInt32Array(23, 39, 38), PackedInt32Array(23, 24, 39), PackedInt32Array(24, 40, 39), PackedInt32Array(24, 25, 40), PackedInt32Array(25, 41, 40), PackedInt32Array(25, 26, 41), PackedInt32Array(26, 42, 41), PackedInt32Array(26, 27, 42), PackedInt32Array(27, 43, 42), PackedInt32Array(27, 28, 43), PackedInt32Array(28, 44, 43), PackedInt32Array(28, 29, 44), PackedInt32Array(29, 45, 44), PackedInt32Array(29, 30, 45), PackedInt32Array(30, 46, 45), PackedInt32Array(30, 31, 46), PackedInt32Array(31, 47, 46), PackedInt32Array(31, 16, 47), PackedInt32Array(16, 32, 47), PackedInt32Array(32, 33, 48), PackedInt32Array(33, 34, 48), PackedInt32Array(34, 35, 48), PackedInt32Array(35, 36, 48), PackedInt32Array(36, 37, 48), PackedInt32Array(37, 38, 48), PackedInt32Array(38, 39, 48), PackedInt32Array(39, 40, 48), PackedInt32Array(40, 41, 48), PackedInt32Array(41, 42, 48), PackedInt32Array(42, 43, 48), PackedInt32Array(43, 44, 48), PackedInt32Array(44, 45, 48), PackedInt32Array(45, 46, 48), PackedInt32Array(46, 47, 48), PackedInt32Array(47, 32, 48)])

[node name="Water" type="QSoftBodyNode" parent="."]
rigidity = 0.1
shape_matching = true
shape_matching_rate = 0.1
use_custom_gravity = true
position = Vector2(656, 496)

[node name="QMeshAdvancedNode" type="QMeshAdvancedNode" parent="Water"]
disable_polygon_for_collisions = true
enable_vector_rendering = true
fill_color = Color(0.146318, 0.398419, 0.80446, 0.803922)
enable_stroke = true
enable_curved_corners = true
curve_length = 4.0
enable_particle_rendering = false
data_particle_positions = PackedVector2Array(-48, 16, -32, 16, 8, 16, 40, 16, 72, 16, 104, 16, 144, 16, 144, 80, -48, 80, -8, 16, 24, 16, 56, 16, 88, 16, 128, 16)
data_particle_radius = PackedFloat32Array(0.5, 12, 12, 12, 12, 12, 0.5, 0.5, 0.5, 12, 12, 12, 12, 12)
data_particle_is_internal = PackedByteArray("AAAAAAAAAAAAAAAAAAA=")
data_particle_is_enabled = PackedByteArray("AAABAQEBAAAAAQEBAQA=")
data_particle_is_lazy = PackedByteArray("AAABAQEBAAAAAQEBAQA=")
data_springs = Array[PackedInt32Array]([PackedInt32Array(1, 9), PackedInt32Array(9, 2), PackedInt32Array(2, 10), PackedInt32Array(10, 3), PackedInt32Array(3, 11), PackedInt32Array(11, 4), PackedInt32Array(4, 12), PackedInt32Array(12, 5), PackedInt32Array(5, 13), PackedInt32Array(13, 6), PackedInt32Array(6, 7), PackedInt32Array(8, 0)])
data_polygon = PackedInt32Array(0, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 7, 8)

[node name="QAreaBodyNode" type="QAreaBodyNode" parent="Water"]
gravity_free = true
linear_force_to_apply = Vector2(0, -0.1)

[node name="QMeshRectNode" type="QMeshAdvancedNode" parent="Water/QAreaBodyNode"]
data_particle_positions = PackedVector2Array(-32, 16, 128, 16, 128, 80, -32, 80)
data_particle_radius = PackedFloat32Array(0.5, 0.5, 0.5, 0.5)
data_particle_is_internal = PackedByteArray("AAAAAA==")
data_particle_is_enabled = PackedByteArray("AQEBAQ==")
data_particle_is_lazy = PackedByteArray("AAAAAA==")
data_springs = Array[PackedInt32Array]([PackedInt32Array(0, 1), PackedInt32Array(1, 2), PackedInt32Array(2, 3), PackedInt32Array(3, 0)])
data_internal_springs = Array[PackedInt32Array]([PackedInt32Array(0, 2), PackedInt32Array(1, 3)])
data_polygon = PackedInt32Array(0, 1, 2, 3)
data_uv_maps = Array[PackedInt32Array]([PackedInt32Array(0, 1, 3), PackedInt32Array(1, 2, 3)])

[node name="TileMapLayer" type="TileMapLayer" parent="."]
tile_map_data = PackedByteArray("AAD+/wMAAQACAAAAAAD+/wQAAQACAAAAAAD+/wUAAQACAAAAAAD+/wYAAQACAAAAAAD+/wcAAQACAAAAAAD+/wgAAQACAAAAAAD+/wkAAQACAAAAAAD+/woAAQACAAAAAAD//wMAAQACAAAAAAD//wQAAQACAAAAAAD//wUAAQACAAAAAAD//wYAAQACAAAAAAD//wcAAQACAAAAAAD//wgAAQACAAAAAAD//wkAAQACAAAAAAD//woAAQACAAAAAAAAAAIAAQACAAAAAAAAAAUAAQACAAAAAAAAAAgAAQACAAAAAAAAAAkAAQACAAAAAAAAAAoAAQACAAAAAAABAAIAAQACAAAAAAABAAUAAQACAAAAAAABAAgAAQACAAAAAAABAAkAAQACAAAAAAABAAoAAQACAAAAAAACAAIAAQACAAAAAAACAAUAAQACAAAAAAACAAgAAQACAAAAAAACAAkAAQACAAAAAAACAAoAAQACAAAAAAADAAIAAQACAAAAAAADAAgAAQACAAAAAAADAAkAAQACAAAAAAADAAoAAQACAAAAAAAEAAIAAQACAAAAAAAEAAcAAQAAAAAAAAAEAAgAAQACAAAAAAAEAAkAAQACAAAAAAAEAAoAAQACAAAAAAAFAAIAAQACAAAAAAAFAAcAAQABAAAAAAAFAAgAAQACAAAAAAAFAAkAAQACAAAAAAAFAAoAAQACAAAAAAAGAAIAAQACAAAAAAAGAAcAAQACAAAAAAAGAAgAAQACAAAAAAAGAAkAAQACAAAAAAAGAAoAAQACAAAAAAAHAAIAAQACAAAAAAAHAAcAAQACAAAAAAAHAAgAAQACAAAAAAAHAAkAAQACAAAAAAAHAAoAAQACAAAAAAAIAAIAAQACAAAAAAAIAAcAAQACAAAAAAAIAAgAAQACAAAAAAAIAAkAAQACAAAAAAAIAAoAAQACAAAAAAAAAAEAAQACAAEAAAAAAAMAAQACAAEAAAAAAAQAAQACAAEAAAAAAAYAAQACAAEAAAAAAAcAAQACAAEAAAADAAUAAQACAAAAAAAJAAIAAQACAAAAAAANAAMAAQACAAAAAAANAAQAAQACAAAAAAANAAUAAQACAAAAAAAQAAEAAQACAAAAAAAQAAIAAQACAAAAAAAQAAMAAQACAAAAAAAQAAQAAQACAAAAAAAQAAUAAQACAAAAAAAQAAYAAQACAAAAAAAQAAcAAQACAAAAAAAQAAgAAQACAAAAAAAQAAkAAQACAAAAAAAQAAoAAQACAAAAAAAOAAgAAQACAAAAAAAPAAkAAQACAAAAAAAOAAkAAQACAAAAAAAMAAoAAQACAAAAAAANAAoAAQACAAAAAAAOAAoAAQACAAAAAAAPAAoAAQACAAAAAAAPAAgAAQACAAAAAAAMAAMAAQACAAAAAAAPAAcAAQACAAAAAAAPAAYAAQACAAAAAAAPAAUAAQACAAAAAAAPAAQAAQACAAAAAAAPAAMAAQACAAAAAAAPAAIAAQACAAAAAAAPAAEAAQACAAAAAAAPAAAAAQACAAAAAAAQAAAAAQACAAAAAAD+/wAAAQACAAAAAAD//wAAAQACAAAAAAAMAAgAAQACAAAAAAANAAgAAQACAAAAAAANAAkAAQACAAAAAAAMAAkAAQACAAAAAAANAAcAAQACAAAAAAAOAAcAAQACAAAAAAAMAAcAAQACAAAAAAD//wIAAQACAAAAAAD+/wIAAQACAAAAAAD+/wEAAQACAAAAAAD//wEAAQACAAAAAAD+////AQACAAAAAAD/////AQACAAAAAAAAAP//AQACAAAAAAABAP//AQACAAAAAAACAP//AQACAAAAAAADAP//AQACAAAAAAAEAP//AQACAAAAAAAFAP//AQACAAAAAAAGAP//AQACAAAAAAAHAP//AQACAAAAAAAIAP//AQACAAAAAAAJAP//AQACAAAAAAAKAP//AQACAAAAAAALAP//AQACAAAAAAAMAP//AQACAAAAAAANAP//AQACAAAAAAAOAP//AQACAAAAAAAPAP//AQACAAAAAAAQAP//AQACAAAAAAAJAAoAAQACAAAAAAAJAAkAAQACAAAAAAAAAP3/AQACAAAAAAAAAP7/AQACAAAAAAABAP3/AQACAAAAAAABAP7/AQACAAAAAAACAP3/AQACAAAAAAACAP7/AQACAAAAAAADAP3/AQACAAAAAAADAP7/AQACAAAAAAAEAP3/AQACAAAAAAAEAP7/AQACAAAAAAAFAP3/AQACAAAAAAAFAP7/AQACAAAAAAAGAP3/AQACAAAAAAAGAP7/AQACAAAAAAAHAP3/AQACAAAAAAAHAP7/AQACAAAAAAAIAP3/AQACAAAAAAAIAP7/AQACAAAAAAAJAP3/AQACAAAAAAAJAP7/AQACAAAAAAAKAP3/AQACAAAAAAAKAP7/AQACAAAAAAALAP3/AQACAAAAAAALAP7/AQACAAAAAAAMAP3/AQACAAAAAAAMAP7/AQACAAAAAAANAP3/AQACAAAAAAANAP7/AQACAAAAAAAOAP3/AQACAAAAAAAOAP7/AQACAAAAAAAPAP3/AQACAAAAAAAPAP7/AQACAAAAAAD+//3/AQACAAAAAAD+//7/AQACAAAAAAD///3/AQACAAAAAAD///7/AQACAAAAAAAJAAgAAQACAAAAAAAJAAcAAQABAAIAAAAKAAoAAQACAAAAAAALAAoAAQACAAAAAAALAAkAAQACAAAAAAAKAAkAAQACAAAAAAA=")
tile_set = SubResource("TileSet_2ktbh")
collision_enabled = false
collision_visibility_mode = 1

[node name="QTileMapCollider" type="Node2D" parent="TileMapLayer"]
script = ExtResource("2_yuswt")

[node name="Door" type="QRigidBodyNode" parent="."]
fixed_rotation = true
mode = 1
mass = 0.1
layers = 0
collidable_layers = 3
position = Vector2(496, 64)

[node name="QMeshRectNode" type="QMeshRectNode" parent="Door"]
rectangle_size = Vector2(28, 128)
enable_vector_rendering = true
fill_color = Color(1, 0.501961, 0.643137, 1)
enable_stroke = true
data_particle_positions = PackedVector2Array(-14, -64, 14, -64, 14, 64, -14, 64)
data_particle_radius = PackedFloat32Array(0.5, 0.5, 0.5, 0.5)
data_particle_is_internal = PackedByteArray("AAAAAA==")
data_particle_is_enabled = PackedByteArray("AQEBAQ==")
data_particle_is_lazy = PackedByteArray("AAAAAA==")
data_springs = Array[PackedInt32Array]([PackedInt32Array(0, 1), PackedInt32Array(1, 2), PackedInt32Array(2, 3), PackedInt32Array(3, 0)])
data_internal_springs = Array[PackedInt32Array]([PackedInt32Array(0, 2), PackedInt32Array(1, 3)])
data_polygon = PackedInt32Array(0, 1, 2, 3)
data_uv_maps = Array[PackedInt32Array]([PackedInt32Array(0, 1, 3), PackedInt32Array(1, 2, 3)])

[node name="MoveablePlatform" type="QRigidBodyNode" parent="."]
kinematic = true
use_custom_gravity = true
layers = 3
position = Vector2(685, 251)
script = ExtResource("2_hvcqu")
next_location = Vector2(330, 340)

[node name="QMeshRectNode" type="QMeshRectNode" parent="MoveablePlatform"]
rectangle_size = Vector2(100, 32)
enable_vector_rendering = true
fill_color = Color(0.980392, 0.992157, 1, 1)
enable_stroke = true
data_particle_positions = PackedVector2Array(-50, -16, 50, -16, 50, 16, -50, 16)
data_particle_radius = PackedFloat32Array(0.5, 0.5, 0.5, 0.5)
data_particle_is_internal = PackedByteArray("AAAAAA==")
data_particle_is_enabled = PackedByteArray("AQEBAQ==")
data_particle_is_lazy = PackedByteArray("AAAAAA==")
data_springs = Array[PackedInt32Array]([PackedInt32Array(0, 1), PackedInt32Array(1, 2), PackedInt32Array(2, 3), PackedInt32Array(3, 0)])
data_internal_springs = Array[PackedInt32Array]([PackedInt32Array(0, 2), PackedInt32Array(1, 3)])
data_polygon = PackedInt32Array(0, 1, 2, 3)
data_uv_maps = Array[PackedInt32Array]([PackedInt32Array(0, 1, 3), PackedInt32Array(1, 2, 3)])

[node name="Box2" type="QRigidBodyNode" parent="."]
layers = 3
position = Vector2(845, 410)

[node name="Coins" type="Node2D" parent="."]

[node name="Coin1" type="QAreaBodyNode" parent="Coins"]
position = Vector2(416, 416)
script = ExtResource("3_5al4l")

[node name="QMeshCircleNode" type="QMeshCircleNode" parent="Coins/Coin1"]
circle_radius = 8.0
enable_vector_rendering = true
fill_color = Color(1, 0.819608, 0, 1)
enable_stroke = true
data_particle_positions = PackedVector2Array(0, 0)
data_particle_radius = PackedFloat32Array(8)
data_particle_is_internal = PackedByteArray("AA==")

[node name="Coin2" type="QAreaBodyNode" parent="Coins"]
position = Vector2(464, 416)
script = ExtResource("3_5al4l")

[node name="QMeshCircleNode" type="QMeshCircleNode" parent="Coins/Coin2"]
circle_radius = 8.0
enable_vector_rendering = true
fill_color = Color(1, 0.819608, 0, 1)
enable_stroke = true
data_particle_positions = PackedVector2Array(0, 0)
data_particle_radius = PackedFloat32Array(8)
data_particle_is_internal = PackedByteArray("AA==")

[node name="Coin3" type="QAreaBodyNode" parent="Coins"]
position = Vector2(512, 416)
script = ExtResource("3_5al4l")

[node name="QMeshCircleNode" type="QMeshCircleNode" parent="Coins/Coin3"]
circle_radius = 8.0
enable_vector_rendering = true
fill_color = Color(1, 0.819608, 0, 1)
enable_stroke = true
data_particle_positions = PackedVector2Array(0, 0)
data_particle_radius = PackedFloat32Array(8)
data_particle_is_internal = PackedByteArray("AA==")

[node name="Coin4" type="QAreaBodyNode" parent="Coins"]
position = Vector2(784, 128)
script = ExtResource("3_5al4l")

[node name="QMeshCircleNode" type="QMeshCircleNode" parent="Coins/Coin4"]
circle_radius = 8.0
enable_vector_rendering = true
fill_color = Color(1, 0.819608, 0, 1)
enable_stroke = true
data_particle_positions = PackedVector2Array(0, 0)
data_particle_radius = PackedFloat32Array(8)
data_particle_is_internal = PackedByteArray("AA==")

[node name="Coin5" type="QAreaBodyNode" parent="Coins"]
position = Vector2(816, 128)
script = ExtResource("3_5al4l")

[node name="QMeshCircleNode" type="QMeshCircleNode" parent="Coins/Coin5"]
circle_radius = 8.0
enable_vector_rendering = true
fill_color = Color(1, 0.819608, 0, 1)
enable_stroke = true
data_particle_positions = PackedVector2Array(0, 0)
data_particle_radius = PackedFloat32Array(8)
data_particle_is_internal = PackedByteArray("AA==")

[node name="Coin9" type="QAreaBodyNode" parent="Coins"]
position = Vector2(848, 128)
script = ExtResource("3_5al4l")

[node name="QMeshCircleNode" type="QMeshCircleNode" parent="Coins/Coin9"]
circle_radius = 8.0
enable_vector_rendering = true
fill_color = Color(1, 0.819608, 0, 1)
enable_stroke = true
data_particle_positions = PackedVector2Array(0, 0)
data_particle_radius = PackedFloat32Array(8)
data_particle_is_internal = PackedByteArray("AA==")

[node name="Coin6" type="QAreaBodyNode" parent="Coins"]
position = Vector2(280, 96)
script = ExtResource("3_5al4l")

[node name="QMeshCircleNode" type="QMeshCircleNode" parent="Coins/Coin6"]
circle_radius = 8.0
enable_vector_rendering = true
fill_color = Color(1, 0.819608, 0, 1)
enable_stroke = true
data_particle_positions = PackedVector2Array(0, 0)
data_particle_radius = PackedFloat32Array(8)
data_particle_is_internal = PackedByteArray("AA==")

[node name="Coin7" type="QAreaBodyNode" parent="Coins"]
position = Vector2(344, 96)
script = ExtResource("3_5al4l")

[node name="QMeshCircleNode" type="QMeshCircleNode" parent="Coins/Coin7"]
circle_radius = 8.0
enable_vector_rendering = true
fill_color = Color(1, 0.819608, 0, 1)
enable_stroke = true
data_particle_positions = PackedVector2Array(0, 0)
data_particle_radius = PackedFloat32Array(8)
data_particle_is_internal = PackedByteArray("AA==")

[node name="Coin8" type="QAreaBodyNode" parent="Coins"]
position = Vector2(408, 96)
script = ExtResource("3_5al4l")

[node name="QMeshCircleNode" type="QMeshCircleNode" parent="Coins/Coin8"]
circle_radius = 8.0
enable_vector_rendering = true
fill_color = Color(1, 0.819608, 0, 1)
enable_stroke = true
data_particle_positions = PackedVector2Array(0, 0)
data_particle_radius = PackedFloat32Array(8)
data_particle_is_internal = PackedByteArray("AA==")
