<?xml version="1.0" encoding="UTF-8" ?>
<class name="QAngleConstraintObject" inherits="RefCounted" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/godotengine/godot/master/doc/class.xsd">
	<brief_description>
	</brief_description>
	<description>
		You can apply angle constraints between 3 particles using the QAngleConstraintObject. The physics engine uses QAngleConstraintObject to impose angle constraints between particles in objects already simulated using mass-spring models (e.g. QSoftBody objects). However, if the user wants, they can apply specific angle constraints between any 3 particles using QAngleConstraintObject. QWorldNode also provides methods to manage QAngleConstraintObject instances.
	[b]Note:[/b] QAngleConstraintObject will not work correctly on objects that are not simulated with particle dynamics, such as rigid bodies whose positions are fixed by transformations. QAngleConstraintObject relies on the ability to change the positions of particles with freedom of movement to apply constraints correctly.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="configure">
			<return type="QAngleConstraintObject" />
			<param index="0" name="particle_object_a" type="QParticleObject" />
			<param index="1" name="particle_object_b" type="QParticleObject" />
			<param index="2" name="particle_object_c" type="QParticleObject" />
			<param index="3" name="minimum_angle" type="float" />
			<param index="4" name="maximum_angle" type="float" />
			<description>
				Provides a configuration for an angle constraint between 3 particles using basic settings.
			[param particle_object_a]: The QParticleObject to assign. 
			[param particle_object_b]: The QParticleObject to assign.
			[param particle_object_c]: The QParticleObject to assign.
			[param minimum_angle]: The minimum angle in radians for the angle constraint applied between 3 particles.
			[param maximum_angle]: The maximum angle in radians for the angle constraint applied between 3 particles.
			</description>
		</method>
		<method name="configure_with_angle_of_local_positions">
			<return type="QAngleConstraintObject" />
			<param index="0" name="particle_object_a" type="QParticleObject" />
			<param index="1" name="particle_object_b" type="QParticleObject" />
			<param index="2" name="particle_object_c" type="QParticleObject" />
			<param index="3" name="angle_range" type="float" />
			<description>
				Provides a configuration to compute the angle between 3 particles based on their local positions and to apply a constraint within the specified angle range.
			[param particle_object_a]: The QParticleObject to assign. 
			[param particle_object_b]: The QParticleObject to assign.
			[param particle_object_c]: The QParticleObject to assign.
			[param angle_range]: The angle range that defines the minimum and maximum limits for the constraint."
			</description>
		</method>
		<method name="get_enabled">
			<return type="bool" />
			<description>
				Returns whether the angle constraint is enabled.
			</description>
		</method>
		<method name="get_max_angle">
			<return type="bool" />
			<description>
				Returns the max-angle of the constraint.
			</description>
		</method>
		<method name="get_min_angle">
			<return type="float" />
			<description>
				Returns the min-angle of the constraint.
			</description>
		</method>
		<method name="get_particle_a">
			<return type="QParticleObject" />
			<description>
				Returns particleA of the angle constraint.
			</description>
		</method>
		<method name="get_particle_b">
			<return type="QParticleObject" />
			<description>
				Returns particleB of the angle constraint.
			</description>
		</method>
		<method name="get_particle_c">
			<return type="QParticleObject" />
			<description>
				Returns particleC of the angle constraint.
			</description>
		</method>
		<method name="get_rigidity">
			<return type="float" />
			<description>
				Returns the rigidity of the angle constraint.
			</description>
		</method>
		<method name="set_enabled">
			<return type="QAngleConstraintObject" />
			<param index="0" name="value" type="bool" />
			<description>
				Sets whether the angle constraint is enabled.
			[param value]: A value to set.
			</description>
		</method>
		<method name="set_max_angle">
			<return type="QAngleConstraintObject" />
			<param index="0" name="value" type="float" />
			<description>
				Sets the maximum angle of the constraint.
			[param value]: The angle in radians to set.
			</description>
		</method>
		<method name="set_min_angle">
			<return type="QAngleConstraintObject" />
			<param index="0" name="value" type="float" />
			<description>
				Sets the minimum angle of the constraint.
			[param value]: The angle in radians to set.
			</description>
		</method>
		<method name="set_particle_a">
			<return type="QAngleConstraintObject" />
			<param index="0" name="particle_object" type="QParticleObject" />
			<description>
				Sets particleA of the angle constraint.
			[param particle_object]: The QParticleObject to assign.
			</description>
		</method>
		<method name="set_particle_b">
			<return type="QAngleConstraintObject" />
			<param index="0" name="particle_object" type="QParticleObject" />
			<description>
				Sets particleB of the angle constraint.
			[param particle_object]: The QParticleObject to assign.
			</description>
		</method>
		<method name="set_particle_c">
			<return type="QAngleConstraintObject" />
			<param index="0" name="particle_object" type="QParticleObject" />
			<description>
				Sets particleC of the angle constraint.
			[param particle_object]: The QParticleObject to assign.
			</description>
		</method>
		<method name="set_rigidity">
			<return type="QAngleConstraintObject" />
			<param index="0" name="value" type="float" />
			<description>
				Sets the rigidity of the constraint.
			[param value]: A value to set.
			</description>
		</method>
	</methods>
</class>
